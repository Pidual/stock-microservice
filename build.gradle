plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco' // JaCoCo Plugin for coverage
}

group = 'com.emazon'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

bootJar { // Configuración específica para bootJar
	enabled = false
}

jar { // Habilita la generación del archivo JAR
	enabled = true
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-config'
	implementation 'org.springframework.security:spring-security-web'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'  // Si usas JSON para los tokens

	// JUnit 5 (actualiza a una versión más reciente)
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'

	// Mockito
	testImplementation 'org.mockito:mockito-core:4.0.0'

	// Spring Boot Starter Test (ya incluye JUnit 5 y Mockito)
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Conector MySQL (solo necesario si usas MySQL en pruebas)
	runtimeOnly 'com.mysql:mysql-connector-j'
}
tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // Genera el reporte de cobertura después de ejecutar las pruebas
}

jacoco {
	toolVersion = "0.8.8" // Versión de JaCoCo, asegúrate de que esté actualizada
}

jacocoTestReport {
	dependsOn test // Asegura que las pruebas se ejecuten antes de generar el reporte
	reports {
		html.required.set(true) // Habilita el reporte HTML
		xml.required.set(false)  // Deshabilita el reporte XML
		csv.required.set(false)  // Deshabilita el reporte CSV
		html.outputLocation.set(file("$buildDir/reports/jacoco")) // Carpeta de salida para el reporte HTML
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.10 // Requiere al menos 80% de cobertura
			}
		}
	}
}

test.finalizedBy jacocoTestCoverageVerification
